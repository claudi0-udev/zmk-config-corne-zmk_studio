#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
  chain-length = <27>;
  // chain-length = <27>;
  // 21 backlight + 6 glowlight
};


#define TAPPING_TERM 200

/ {
  behaviors {
    /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

    td_lock: tap_dance_lock {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LOCK";
      #binding-cells = <0>;
      tapping-term-ms = <TAPPING_TERM>;
      bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Clear_BLE_Profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 5>;
    };

    Space {
      bindings = <&kp SPACE>;
      key-positions = <29 28>;
    };

    Enter {
      bindings = <&kp ENTER>;
      key-positions = <17 16>;
    };

    Capslock {
      bindings = <&kp CLCK>;
      key-positions = <5 6>;
    };
  };

  macros {
    git_status: git_status {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
      label = "GIT_STATUS";
    };
    git_commit_all: git_commit_all {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
      label = "GIT_COMMIT";
    };
  };

keymap {
      compatible = "zmk,keymap";
  layer0 {
          bindings = <
          &kp ESCAPE &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE &kp LEFT_SHIFT &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE &kp LEFT_CONTROL &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp DELETE &mt LEFT_ALT TAB &mo 1 &kp SPACE &kp ENTER &mo 2 [[TD(TD_WIN)]]
          >;
        };layer1 {
          bindings = <
          &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none &trans [[QK_BOOT]] &kp LEFT &kp DOWN &kp UP &kp RIGHT [[KC_MS_L]] [[KC_MS_D]] [[KC_MS_U]] [[KC_MS_R]] [[KC_BTN1]] [[KC_BTN2]] &trans &trans &kp SPACE &kp ENTER &mo 3 &kp RIGHT_ALT
          >;
        };layer2 {
          bindings = <
          &kp ESCAPE [[KC_EXLM]] [[KC_AT]] [[KC_HASH]] [[KC_DLR]] [[KC_PERC]] [[KC_CIRC]] [[KC_AMPR]] [[KC_ASTR]] [[KC_LPRN]] [[KC_RPRN]] &kp BACKSPACE &trans &none &kp UP &none &none &none &kp MINUS &kp EQUAL &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp BACKSLASH &kp GRAVE &trans &kp LEFT &kp DOWN &kp RIGHT &none &none [[KC_UNDS]] [[KC_PLUS]] [[KC_LCBR]] [[KC_RCBR]] [[KC_PIPE]] [[KC_TILD]] &kp TAB &mo 3 &kp SPACE &kp ENTER &trans &kp RIGHT_ALT
          >;
        };layer3 {
          bindings = <
          [[QK_BOOT]] &kp C_VOLUME_DOWN &kp C_VOLUME_UP &kp C_PLAY_PAUSE &kp C_PREVIOUS &kp C_NEXT [[KC_BTN2]] &none [[KC_WH_U]] &kp PRINTSCREEN &kp SCROLLLOCK &kp PAUSE_BREAK [[RGB_TOG]] [[RGB_HUI]] [[RGB_SAI]] [[RGB_VAI]] &none &kp C_BRIGHTNESS_INC [[KC_BTN1]] [[KC_MS_U]] [[KC_WH_D]] &kp INSERT &kp HOME &kp PAGE_UP [[RGB_MOD]] [[RGB_HUD]] [[RGB_SAD]] [[RGB_VAD]] &none &kp C_BRIGHTNESS_DEC [[KC_MS_L]] [[KC_MS_D]] [[KC_MS_R]] &kp DELETE &kp END &kp PAGE_DOWN &trans &trans &kp SPACE &kp ENTER &trans &kp RIGHT_ALT
          >;
        };
  };
  

  conditional_layers {
    compatible = "zmk,conditional-layers";

    Activate_EXT {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
