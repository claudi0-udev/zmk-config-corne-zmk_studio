#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

#define TAPPING_TERM 200

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

        td_lock: tap_dance_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LOCK";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <0 38 5>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <29 28>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
        };

        Capslock {
            bindings = <&kp CLCK>;
            key-positions = <5 6>;
        };
    };

    macros {
        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };

        git_commit_all: git_commit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "GIT_COMMIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp LSHIFT        &kp A  &kp S  &kp D             &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp DEL
                                &mt LEFT_ALT TAB  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp ENTER
            >;
        };

        FX_LAYER {
            label = "FX";
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6      &kp F7            &kp F8             &kp F9          &kp F10          &kp F11        &kp F12
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5      &kp NUMBER_6      &kp N7             &kp N8          &kp N9           &kp NUMBER_0   &trans
&trans  &kp GRAVE     &kp TILDE     &kp PIPE      &kp EQUAL     &kp PLUS    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH  &trans
                                    &trans        &trans        &trans      &trans            &trans             &trans
            >;
        };

        SYMBOLS_LAYER {
            label = "SYMBOLS";
            bindings = <
&kp ESCAPE  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH           &kp DOLLAR       &kp PERCENT    &kp LCTRL       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp ESC     &trans           &kp UP_ARROW    &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans         &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &kp GRAVE
&trans      &kp LEFT         &kp DOWN_ARROW  &kp RIGHT          &kp PG_UP        &kp END        &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
                                             &trans             &trans           &trans         &trans          &trans         &trans
            >;
        };

        extended_layer {
            label = "EXT";
            bindings = <
&trans    &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &kp F3        &kp F4        &kp F5          &kp F6                &kp F7                &kp F8            &kp F9             &kp F10          &kp F12
&kp K_PP  &kp K_PREV       &kp K_NEXT       &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &ext_power EP_ON  &ext_power EP_OFF  &rgb_ug RGB_OFF  &rgb_ug RGB_SAI
&trans    &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR_ALL        &rgb_ug RGB_BRD       &rgb_ug RGB_BRI   &sys_reset         &rgb_ug RGB_ON   &rgb_ug RGB_SAD
                                            &trans        &trans        &trans          &trans                &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
